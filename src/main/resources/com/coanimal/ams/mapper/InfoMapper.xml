<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.coanimal.ams.dao.InfoDao">

  <resultMap type="Info" id="InfoMap">
    <id column="info_no" property="infoNo"/>
    <result column="member_no" property="memberNo"/>
    <result column="info_category" property="infoCategory"/>
    <result column="title" property="title"/>
    <result column="content" property="content"/>
    <result column="create_date" property="createDate"/>
    <result column="view_count" property="viewCount"/>
    <result column="like_count" property="likeCount"/>
    <result column="nickname" property="nickname" />
  </resultMap>
  

  <!-- 리스트 + 페이징 + 검색 -->
  <select id="findAll" resultMap="InfoMap" parameterType="com.coanimal.ams.domain.SearchCriteria">
  SELECT
      i.info_no,
      i.info_category,
      m.nickname,
      i.title,
      i.content,
      i.create_date,
      i.view_count,
      i.like_count
    FROM
      info_board AS i 
    LEFT JOIN member AS m ON i.member_no=m.member_no

    WHERE i.info_no > 0
      <include refid="search"></include>
    ORDER BY  
      i.info_no desc

    LIMIT #{pageStart}, #{perPageNum}
  </select>
  
  <!-- 총 게시물 개수 구하기 -->
  <select id="countInfoList" parameterType="com.coanimal.ams.domain.SearchCriteria" resultType="int">
    SELECT
        count(*)
    FROM
         info_board AS i 
    LEFT JOIN member AS m ON i.member_no=m.member_no
    WHERE i.info_no > 0
    <include refid="search"></include>  
  </select>
  
  <!-- 검색기능을 위한 동적SQL추가 -->
  <sql id="search">
    <if test="searchType != null">
      <if test="searchType == 't'.toString()">AND i.title LIKE CONCAT('%',#{keyword},'%')</if>
      <if test="searchType == 'c'.toString()">AND i.content LIKE CONCAT('%',#{keyword},'%')</if>
      <if test="searchType == 'w'.toString()">AND m.nickname LIKE CONCAT('%',#{keyword},'%')</if>
      <if test="searchType == 'tc'.toString()">AND (i.title LIKE CONCAT('%',#{keyword},'%')) or (i.content LIKE CONCAT('%',#{keyword},'%'))</if>
    </if>
  </sql>
  
  <!-- 첨부파일 관련 코드 추가 -->
  <insert id="insert" parameterType="Info" useGeneratedKeys="true" keyProperty="infoNo">
      <selectKey keyProperty="infoNo" resultType="int" order="BEFORE">
         SELECT MAX(info_no)+1 FROM info_board 
      </selectKey>
    
    insert into info_board(
      info_category,
      title,
      content
      ) 
    values(
     #{infoCategory},
     #{title},
     #{content}
    )
  </insert>
  
  <select id="findByNo" resultMap="InfoMap" parameterType="int">
    SELECT
      i.info_no,
      i.info_category,
      m.nickname,
      i.title,
      i.content,
      i.create_date,
      i.view_count,
      i.like_count
    FROM
      info_board AS i 
    LEFT JOIN member AS m ON i.member_no=m.member_no
    WHERE
      i.info_no=#{infoNo}
  </select>
  
  <update id="update" parameterType="Info">
    update info_board 
    set
      info_category=#{infoCategory},
      title=#{title},
      content=#{content}
    where 
      info_no=#{infoNo}
  </update>
  
  <delete id="delete" parameterType="int">
    delete from info_board
    where info_no=#{infoNo}
  </delete>
  
   
  <select id="findByKeyword" resultMap="InfoMap" parameterType="string">
    <bind name="keywordPattern" value="'%' + _parameter + '%'" />
     SELECT
      i.info_no,
      i.info_category,
      m.nickname,
      i.title,
      i.content,
      i.create_date,
      i.view_count,
      i.like_count
    FROM
      info_board AS i 
    LEFT JOIN member AS m ON i.member_no=m.member_no
    WHERE
      title like #{keywordPattern}
      or content like #{keywordPattern}
      or nickname like #{keywordPattern}
    order by 
      i.info_no desc 
  </select>


  <!-- 첨부파일 업로드 -->
  <insert id="insertFile" parameterType="hashMap">
    INSERT INTO info_file(
     info_no,
     org_file_name,
     stored_file_name,
     file_size
   )VALUES(
     #{info_no},
     #{org_file_name},
     #{stored_file_name},
     #{file_size}
   )
  </insert>
  
  <!-- 첨부파일 조회 -->
  <select id="selectFileList" parameterType="int" resultType="hashMap">
	  SELECT 
	    file_no,
	    org_file_name,
	    round(file_size/1024,1) AS file_size
	   FROM info_file
	   WHERE info_no = #{info_no}
	   
	   ORDER BY file_no ASC
  </select>
  
  <!-- 첨부파일 다운로드 -->
  <select id="selectFileInfo" parameterType="hashMap" resultType="hashMap">
    SELECT 
      stored_file_name,
      org_file_name
    FROM info_file
    WHERE file_no = #{file_no}
  </select>
  
  <!-- 첨부파일 수정 -->
  <update id="updateFile" parameterType="hashMap">
     UPDATE info_file 
     SET
       del_gb='Y'
     WHERE file_no = #{file_no}
  </update>
</mapper>







